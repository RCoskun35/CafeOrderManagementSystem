@using CafeOrderManagementSystem.Domain.Entities
@using CafeOrderManagementSystem.Application.Features.TableFeature.GetAllTable
@model List<TableDto>
@{
    Layout = null;
    var dailyCount = (ViewBag.DailyOrders as List<Order>).Count();
    var dailyPayment = (ViewBag.DailyPayments as List<Payment>)?.Sum(x => x.Amount) ?? 0;
    var openTable = Model.Where(a => a.State == 0).Count();
    var closedTable = Model.Where(a => a.State == 1).Count();
    var reservedTalbe = Model.Where(a => a.State == 2).Count();

}
<style>
    #addProductToOrderModal .modal-body > div {
        margin-bottom: 5px;
    }

    #addProductToOrderModal .modal-body {
        padding: 10px;
    }

    #addProductToOrderModal .modal-body {
        max-height: 70vh;
        overflow-y: auto;
    }
</style>



<script src="~/Content/common.js"></script>

<div class="col-12">
    <div class="row">
        <div class="col-md-4">
            <div class="card shadow-lg border-0">
                <div class="card-header bg-gradient-primary  py-3">
                    <h4 class="mb-0" style="color:darkred"><i class="fas fa-shopping-cart"></i> Günlük Sipariş Sayısı</h4>
                </div>
                <div class="card-body">
                    <h5 class="card-title text-primary fw-bold" id="dailyOrderCount">@dailyCount</h5>
                    <p class="card-text text-muted">Bugün alınan toplam sipariş sayısı</p>
                </div>
                <div class="card-footer bg-light">
                    <span class="text-info"><i class="fas fa-chart-line"></i> Siparişleri yakından izleyin.</span>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card shadow-lg border-0">
                <div class="card-header bg-gradient-success py-3">
                    <h4 class="mb-0" style="color:darkred"><i class="fas fa-coins"></i> Günlük Hasılat</h4>
                </div>
                <div class="card-body">
                    <h5 class="card-title text-success fw-bold" id="dailyRevenue">@dailyPayment TL</h5>
                    <p class="card-text text-muted">Bugünkü toplam hasılat</p>
                </div>
                <div class="card-footer bg-light">
                    <span class="text-primary"><i class="fas fa-calendar-day"></i> Güncel durumu takip edin.</span>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card shadow-lg border-0">
                <div class="card-header bg-gradient-info py-3">
                    <h4 class="mb-0" style="color:darkred"><i class="fas fa-table"></i> Masa Özet Bilgileri</h4>
                </div>
                <div class="card-body">
                    <h5 class="card-title text-primary fw-bold" id="tableSummary">@openTable / @closedTable / @reservedTalbe</h5>
                    <p class="card-text text-muted">Uygun Masa / Dolu Masa / Rezerve Masa</p>
                </div>
                <div class="card-footer bg-light d-flex justify-content-around">
                    <span class="text-success"><i class="fas fa-check-circle"></i> Açık: @openTable</span>
                    <span class="text-danger"><i class="fas fa-times-circle"></i> Kapalı: @closedTable</span>
                    <span class="text-warning"><i class="fas fa-bookmark"></i> Rezerve: @reservedTalbe</span>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="row">
    @foreach (var table in Model)
    {
        <div class="col-lg-3">
            <div class="card mb-3" style="@(table.State == 0 ? " background-color:#198754;" : table.State==1
          ? "background-color: #E23F44;" : "background-color: #3D3635;" )">

                <div class="row g-0">
                    <div class="col-md-12">
                        <div class="card-body text-white">
                            <h5 class="card-title text-white">
                                @table.TableNumber-@(table.State == 0 ? "Boş" : table.State == 1 ? "Dolu" :"Rezerve")
                            </h5>
                            <p class="card-text">

                                @if (table.State == 0)
                                {
                                    <div class="d-flex align-items-center mb-2">
                                        <button onclick="addProductToOrder('@table.Id', event)" class="btn btn-primary" style="margin-right:10px">
                                            Sipariş
                                            Al
                                        </button>
                                        <button onclick="makeReservation('@table.Id', event)" class="btn btn-secondary">
                                            Rezervasyon Yap
                                        </button>
                                    </div>

                                    <div class="d-flex justify-content-between align-items-center mt-4">
                                        <p class="mt-2">Toplam: 0 TL</p>
                                    </div>
                                }

                                else @if (table.State == 1)
                                {
                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                        <button onclick="addProductToOrder('@table.Id', event)" class="btn btn-success">
                                            Sipariş Düzenle
                                        </button>
                                        <button onclick="openPaymentModal(
                                          '@table.Id',
                                           '@table.Order.Id',
                                           '@table.Order.OrderDetails.Sum(x => x.UnitPrice * x.Quantity)',
                                           '@table.Payments.Sum(a => a.Amount)'
                                           )" class="btn btn-success">
                                            Ödeme Al
                                        </button>
                                        <button onclick="closedOrder(
                                        '@(table.Order?.Id ?? 0)',
                                         event,
                                         '@table.Order.OrderDetails.Sum(x => x.UnitPrice * x.Quantity)',
                                        '@table.Payments.Sum(a => a.Amount)'
                                         )" class="btn btn-primary">
                                            Masayı Kapat
                                        </button>
                                    </div>
                                    <div class="d-flex justify-content-between align-items-center mt-4">
                                        <p class="mb-0">
                                            <strong>Toplam:</strong> @table.Order.OrderDetails.Sum(x => x.UnitPrice * x.Quantity)
                                            TL
                                        </p>
                                        <p class="mb-0" style="margin-left:10px"><strong>Ödenen Tutar:</strong> @table.Payments.Sum(a => a.Amount) TL</p>
                                        <p class="mb-0" style="margin-left:10px">
                                            <strong>Kalan Tutar:</strong> @((table.Order?.OrderDetails?.Sum(x => x.UnitPrice * x.Quantity) ?? 0)
                                    - (table.Payments?.Sum(a => a.Amount) ?? 0)) TL
                                        </p>
                                    </div>

                                }
                                else @if (table.State == 2)
                                {
                                    <div class="d-flex align-items-center mb-2">
                                        <button onclick="addProductToOrder('@table.Id', event)" class="btn btn-primary" style="margin-right:10px">Sipariş Al</button>
                                        <button onclick="deleteReservation('@table.Id', event)" class="btn btn-success">
                                            Rezervasyon Sil
                                        </button>
                                    </div>
                                    <div class="d-flex justify-content-between align-items-center mt-4">
                                        <p class="mt-2">Rezervasyon Tarihi: @table.UpdatedDate.Value</p>
                                    </div>
                                }

                            </p>
                        </div>
                    </div>
                </div>
            </div><!-- End Card with an image on left -->
        </div>
    }
</div>



<div class="modal addProductToOrderModal fade bd-example-modal-lg" id="addProductToOrderModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" style="width:1200px !important">
            <div class="modal-header">
                <ul class="nav nav-tabs" id="productMenuTabs" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="products-tab" data-bs-toggle="tab"
                                data-bs-target="#products-content" type="button" role="tab" aria-controls="products-content"
                                aria-selected="true">
                            Ürünlerden Seç
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="menus-tab" data-bs-toggle="tab" data-bs-target="#menus-content"
                                type="button" role="tab" aria-controls="menus-content" aria-selected="false">
                            Menülerden Seç
                        </button>
                    </li>
                </ul>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body">
                <div class="tab-content" id="productMenuTabsContent">
                    <div class="tab-pane fade show active" id="products-content" role="tabpanel"
                         aria-labelledby="products-tab">
                        <div class="row mb-3">
                            <label for="productQuantity" class="col-sm-2 col-form-label">Ürün Adedi</label>
                            <div class="col-sm-10">
                                <input type="number" id="productQuantity" value="1" class="form-control">
                            </div>
                        </div>
                        <div class="row mb-3">
                            <label for="products" class="col-sm-2 col-form-label mb-5">Ürün Ekle</label>
                            <div class="col-sm-10">
                                <select class="form-select" id="products"></select>
                            </div>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="menus-content" role="tabpanel" aria-labelledby="menus-tab">
                        <div class="row mb-3">
                            <label for="menuQuantity" class="col-sm-2 col-form-label">Menü Adedi</label>
                            <div class="col-sm-10">
                                <input type="number" id="menuQuantity" value="1" class="form-control">
                            </div>
                        </div>
                        <div class="row mb-3">
                            <label for="menus" class="col-sm-2 col-form-label  mb-5">Menü Ekle</label>
                            <div class="col-sm-10">
                                <select class="form-select" id="menus"></select>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="allProduct"></div>

            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kaydet</button>
            </div>
        </div>
    </div>
    <input type="hidden" id="selectedOrderId" />
    <input type="hidden" id="selectedTableId" />
</div>

<div class="modal" tabindex="-1" id="paymentModal" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Ödeme Al</h5>
            </div>
            <div class="modal-body">
                <input type="hidden" id="paymentTableId" />
                <input type="hidden" id="paymentOrderId" />
                <p>Toplam Tutar : <span id="paymentTotalAmount"></span> TL</p>
                <div class="row mb-3">
                    <label for="amountPaid" class="col-sm-4 col-form-label">Ödenecek Tutar</label>
                    <div class="col-sm-8">
                        <input type="number" id="amountPaid" class="form-control">
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" onclick="makePayment()" class="btn btn-primary">Ödeme Yap</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
            </div>
        </div>
    </div>
</div>
<script>

    function getPartialView(selectedTableId = 0) {
      $.ajax({
        url: '/Home/HomePartialView',
        type: 'GET',
        success: function (result) {
          $('#partialContainer').html(result);
          if (selectedTableId > 0) {
            addProductToOrder(selectedTableId, selectedTableId);
          }
        }
      });
    }

    function closedOrder(orderId, event, orderAmount, paidAmount) {
      event.stopPropagation();
      if (orderAmount != paidAmount) {
        OnBoxConfirm({
          title: "Siparişde ödenmemiş miktar var",
          text: "Toplam tutarın tamamı ödenmeden kapatılsın mı?",
          confirmButtonText: "Evet!",
          onConfirm: () => {
            closeOrderConfirmed(orderId);
          }
        });
      }
      else {
        closeOrderConfirmed(orderId);
      }


    }
    function closeOrderConfirmed(orderId) {
      $.ajax({
        url: '/Order/CloseOrder',
        type: 'POST',
        data: { id: orderId },
        success: function (response) {

          successToast("Masa kapatıldı")
          getPartialView();
        },
        error: function (xhr, status, error) {
          console.error("Hata oluştu:", error);
          errorToast(xhr.responseText)
        }
      });
    }
    function deleteReservation(tableId, event) {
      event.stopPropagation();
      $.ajax({
        url: '/Table/CancelReservationById',
        type: 'POST',
        data: { id: tableId },
        success: function (response) {

          successToast("Rezervasyon Silindi")
          getPartialView();
        },
        error: function (xhr, status, error) {
          console.error("Hata oluştu:", error);
          alert("Hata: " + error);
        }
      });
    }
    function makeReservation(tableId, event) {
      event.stopPropagation();
      $.ajax({
        url: '/Table/ReservationById',
        type: 'POST',
        data: { id: tableId },
        success: function (response) {

          successToast("Rezervasyon Gerçekleştirildi")
          getPartialView();
        },
        error: function (xhr, status, error) {
          console.error("Hata oluştu:", error);
          alert("Hata: " + error);
        }
      });
    }

    var allMenus = [];
    var orderProducts = [];
    function addProductToOrder(tableId, event) {
      $('#selectedTableId').val(tableId);
      try {
        event.stopPropagation();

      } catch (err) {
      }
      $
        ('#addProductToOrderModal').modal('show');

      orderProducts = [];
      fetchProducts();
      fetchMenus();
      fetchTableDetails(tableId);

    }
    function fetchProducts() {
      $.ajax({
        url: '/Product/GetAll',
        type: 'GET',
        success: function (response) {
          populateProductDropdown(response);

        },
        error: function (xhr) {
          errorToast(xhr.responseText);
        }
      });
    }
    function fetchMenus() {
      $.ajax({
        url: '/Menu/GetAllNoEmpty',
        type: 'GET',
        success: function (response) {
          populateMenuDropdown(response);
          allMenus = response;

        },
        error: function (xhr) {
          errorToast(xhr.responseText);
        }
      });
    }

    function populateMenuDropdown(menus) {
      const dropdown = $('#menus');
      dropdown.empty();
      dropdown.append($('<option></option>').val(0).text('Seçiniz'));

      menus.forEach(menu => {
        const productNames = menu.products.map(product => product.name).join('-');
        dropdown.append(
          `<option value="${menu.id}" title="${menu.name} (${productNames})">
                    ${menu.name} (${productNames.length > 50 ? productNames.substring(0, 45) + '...' : productNames})
                </option>`
        );
      });
    }

    function populateProductDropdown(products) {
      const dropdown = $('#products');
      dropdown.empty();
      dropdown.append($('<option></option>').val(0).text('Seçiniz'));

      products.forEach(product => {
        dropdown.append(
          `<option value="${product.id}"
                          data-price="${product.price}"
                          data-quantity="${product.quantity}"
                          data-menu="${product.menu?.name || ''}">
                      ${product.name}
                  </option>`
        );
      });
    }
    function fetchTableDetails(tableId) {
      $.ajax({
        url: '/Table/GetById',
        type: 'POST',
        data: { id: tableId },
        success: function (response) {
          if (response.order) {
            $('#selectedOrderId').val(response.order.id);
            renderOrderDetails(response.order.orderDetails);

          }

        },
        error: function (xhr) {
          errorToast(xhr.responseText);
        }
      });
    }
    function renderOrderDetails(orderDetails) {
      const productContainer = $('#allProduct');
      productContainer.empty();
      productContainer.append(getOrderHeaderTemplate());
      let totalPrice = 0;
      orderDetails.forEach(detail => {
        totalPrice += detail.unitPrice * detail.quantity;
        orderProducts.push({
          id: detail.product.id,
          name: detail.product.name,
          price: detail.unitPrice,
          quantity: detail.quantity,
          menu: detail.menu?.name || ''
        });

        productContainer.append(getOrderDetailTemplate(detail));
      });
      productContainer.append(getOrderSummaryTemplate(totalPrice));
    }
    function getOrderHeaderTemplate() {
      return `
              <div id="product-0" class="product-item">
                  <div class="row">
                      <div class="col-3"><p><strong>Ürün Adı</strong></p></div>
                      <div class="col-3"><p><strong>Menü Adı</strong></p></div>
                      <div class="col-2"><p><strong>Ürün Adedi</strong></p></div>
                      <div class="col-2"><p><strong>Birim Fiyatı</strong></p></div>
                      <div class="col-1"><p><strong>Ara Toplam</strong></p></div>
                      <div class="col-1"><p><strong>Sil</strong></p></div>
                  </div>
                  <hr />
              </div>`;
    }
    function getOrderDetailTemplate(detail) {

      return `
              <div id="product-${detail.product.id}" class="product-item">
                  <div class="row">
                      <div class="col-3"><p>${detail.product.name}</p></div>
                      <div class="col-3"><p>${detail.menu?.name || ''}</p></div>
                      <div class="col-2"><p>${detail.quantity}</p></div>
                      <div class="col-2"><p>${detail.unitPrice}</p></div>
                      <div class="col-1"><p>${detail.quantity * detail.unitPrice}</p></div>
                      <div class="col-1"><button class="btn btn-warning" onclick="removeOrderDetail(${detail.id})">Sil</button></div>
                  </div>
                  <hr />
              </div>`;
    }
    function getOrderSummaryTemplate(totalPrice) {
      return `
              <div id="product-summary" class="product-item">
                  <div class="row">
                      <div class="col-10"><p><strong>Toplam Tutar:</strong></p></div>
                      <div class="col-2"><p><strong>${totalPrice}</strong></p></div>
                  </div>
                  <hr />
              </div>`;
    }




    $('#menus').on('change', function () {
      const selectedOption = $(this).find(':selected');
      const id = selectedOption.val();
      const orderId = $('#selectedOrderId').val();
      const quantity = $('#menuQuantity').val();

      var selectedMenu = allMenus.find(m => m.id == id);
      const data = {
        id: orderId,
        tableId: $('#selectedTableId').val(),
        orderDetails: selectedMenu.products.map(product => ({
          productId: product.id,
          quantity: quantity,
          menuId: selectedMenu.id
        }))
      };
      $.ajax({
        url: '/Order/AddOrderDetail',
        type: 'POST',
        data: data,
        success: function () {
          selectedMenu.products.forEach(item => {
            var id = item.id;
            var name = item.name;
            var price = item.price * 0.9;
            var menu = selectedMenu.id
            orderProducts.push({ id, name, price, quantity: quantity, menu });

          });
          renderUpdatedOrderDetails();

          $('#addProductToOrderModal').modal('hide');

          getPartialView($('#selectedTableId').val());
        },
        error: function (xhr) {
          errorToast(xhr.responseText);
        }
      });
    });


    $('#products').on('change', function () {
      const selectedOption = $(this).find(':selected');
      const id = selectedOption.val();
      const price = selectedOption.data('price');
      const quantity = $('#productQuantity').val();
      const menu = selectedOption.data('menu');
      const name = selectedOption.text();
      const orderId = $('#selectedOrderId').val();

      const data = {
        id: orderId,
        tableId: $('#selectedTableId').val(),
        orderDetails: [
          {
            productId: id,
            quantity: quantity
          }
        ]
      };

      $.ajax({
        url: '/Order/AddOrderDetail',
        type: 'POST',
        data: data,
        success: function () {
          orderProducts.push({ id, name, price, quantity: quantity, menu });
          renderUpdatedOrderDetails();

          $('#addProductToOrderModal').modal('hide');

          getPartialView($('#selectedTableId').val());
        },
        error: function (xhr) {
          errorToast(xhr.responseText);
        }
      });
    });
    function renderUpdatedOrderDetails() {
      const productContainer = $('#allProduct');
      productContainer.empty();
      productContainer.append(getOrderHeaderTemplate());
      let totalPrice = 0;
      orderProducts.forEach(product => {
        totalPrice += product.price * product.quantity;
        productContainer.append(`
                  <div id="product-${product.id}" class="product-item">
                      <div class="row">
                          <div class="col-4"><p>${product.name}</p></div>
                          <div class="col-4"><p>${product.menu || ''}</p></div>
                          <div class="col-2"><p>${product.quantity}</p></div>
                          <div class="col-2"><p>${product.price}</p></div>
                      </div>
                      <hr />
                  </div>`);
      });

      productContainer.append(getOrderSummaryTemplate(totalPrice));
    }
    function addOrder(tableId, event) {
      event.stopPropagation();
      const requestData = {
        id: tableId
      };

    }
    function removeOrderDetail(id) {
      $.ajax({
        url: '/Order/RemoveOrderDetail',
        type: 'POST',
        data: { id: id },
        success: function (result) {
          $('#addProductToOrderModal').modal('hide');
          getPartialView($('#selectedTableId').val());

        }
      });
    }

    function openPaymentModal(tableId, orderId, totalAmount, paidAmount) {
      var remainingAmount = parseFloat(totalAmount.replace(',', '.')) - parseFloat(paidAmount.replace(',', '.'));
      $('#paymentTableId').val(tableId)
      $('#paymentOrderId').val(orderId)
      $('#paymentModal').modal('show');
      $('#paymentTotalAmount').text(totalAmount);
      $('#amountPaid').val(remainingAmount);
    }
    function makePayment() {
      var amountPaid = $('#amountPaid').val();
      var tableId = $('#paymentTableId').val();
      var orderId = $('#paymentOrderId').val();
      $.ajax({
        url: '/Payment/Create',
        type: 'POST',
        data: { orderId: orderId, amount: amountPaid, paymentMethod: 'Nakit' },
        success: function (result) {
          successToast("Ödeme Başarıyla Gerçekleştirildi");
          $('#paymentModal').modal('hide');
          getPartialView()
        }
      });
    }
</script>